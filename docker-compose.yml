version: '3.8'

networks:
  docker_private:
    name: docker_private_${NETWORK_NAME}
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY}

volumes:
  mariadb-volume:
    driver: local

services:

  nginx-balancer:
    build:
      context: .
      dockerfile: Docker/Dockerfile.nginx
      args:
        DOMAIN: ${PROJECT_DOMAIN}
    container_name: nginx-${NGINX_CONTAINER_NAME}
    restart: unless-stopped
    dns: ${DNS}
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      DOMAIN: ${PROJECT_DOMAIN}
      SERVER_FPM: ${COMPOSE_PROJECT_NAME}-php-fpm
      SERVER_FPM_PORT: 9000
      SERVER_ROOT: /var/www/public
    networks:
      docker_private:
        ipv4_address: ${IP_PREFIX}.10
    links:
      - mariadb-server
      - php-fpm
    ports:
      - '80:80'
      - '443:443'
    command: /bin/sh -c "envsubst '$$DOMAIN $$SERVER_FPM $$SERVER_FPM_PORT $$SERVER_ROOT' <  /etc/nginx/templates/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    volumes:
      - ./App:/var/www
      - ./Docker/nginx/default.conf:/etc/nginx/templates/default.template
      - ./Docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./Docker/nginx/snipets/:/etc/nginx/conf.d/snipets/
      - ./Docker/Logs/nginx:/var/log/nginx
      - ./Docker/ssl/:/etc/certbot/:ro
      # - ./Docker/ssl/conf/:/etc/nginx/ssl/:ro
    labels:
      com.example.description: "Nginx Web server to balance PHP and static content"

  mariadb-server:
    image: mariadb
    container_name: mariadb-${MARIA_CONTAINER_NAME}
    restart: unless-stopped
    dns: ${DNS}
    networks:
      docker_private:
        ipv4_address: ${IP_PREFIX}.11
    ports:
      - 3380:3306
    volumes:
      - mariadb-volume:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
    labels:
      com.example.description: "Database container"

  node-js:
    container_name: node-${NODE_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Docker/Dockerfile.node
      args:
        - NODE_ENV=development
    volumes:
      - './App:/opt'
    dns: ${DNS}
    networks:
      docker_private:
        ipv4_address: ${IP_PREFIX}.12

  php-fpm:
    # container_name: php-${PHP_CONTAINER_NAME}
    deploy:
      replicas: 3
    build:
      context: .
      dockerfile: Docker/Dockerfile.php
      args:
        USER_UID: ${UID}
        USER_GID: ${GID}
        USER_NAME: ${USER}
    user: $UID:$GID
    tty: true
    restart: unless-stopped
    working_dir: /var/www/
    dns: ${DNS}
    ports:
      - "9000"
    networks:
      - docker_private
    links:
      - mariadb-server
    volumes:
      - ./App:/var/www
      - ./Docker/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./Docker/php/php.ini:/usr/local/etc/php/php.ini
    labels:
      com.example.description: "PHP fpm server"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./Docker/ssl/:/etc/certbot/:rw
      - ./Docker/ssl/conf/:/etc/letsencrypt/:rw
    labels:
      com.example.description: "Generate a SSL cert for your domain"
